# Julia 這個程式語言

## 為何要新的程式語言

我們要介紹, 為什麼一個 Python 派的人, 會對 Julia 這個語言有興趣。

Python 簡單易學, 很容易上手, 功能又強大, 是全方位的語言。而且, 社群十分完整堅強, 要找教學啦、特别的套件、問題討論啦等等, 都算相當容易。

Julia 除了因為新, 所以社群支援沒有 Python 強大, 其他幾乎是樣樣做到。不過, 就只是因為這樣, 我們還是沒有什麼理由, 非來學個新的語言不可。

Julia 的特性, 核心開發展說得很貼切, 這是一個

「貪心的一群人要開發的程式語言。」

* 要像 Python 這樣簡單、強大、全方位。
* 要像 R, Matlab 方便做科學計算、數據分析。

這還不夠, 還要

「像 C 一樣快!」

等等, 這幾點真的沒有衝突嗎? 

Julia 簡單、易學, 而且不像 Matlab 或 R, 是準備往全功能方向走的。意思就是基本上你要寫什麼樣的程式都可以。而在矩陣計算、複數有理數處理等等, 很多其他程式語言要動用套件的, 在 Julia 都是內建基本配備, 這在許多程式寫法會更一致方便。

有人在實測上覺得它比 Python 快 100 倍! 

我們不妨一起來試試, 這個挺值得期待、非常具有現代感的新程式語言。

## 我們的 Julia 環境

如果你沒有堅持不要裝 Python, 一個方便的裝法是用 Anaconda 去安裝。

<http://continuum.io/downloads>

我們要確定 IPython 這個套件要 3.0 版以上。

至於 Julia 本身安裝沒有什麼特别, 到官網下載, 點兩下安裝這樣就好了。

<http://julialang.org>

我們要介紹的是一個很棒的網頁界面, 叫 IJulia。IJulia 的安裝是在 Julia 命令列中, 用我們以後會常用的加套件方法, 打入:

	Pkg.add("IJulia")
	
對了, Julia 基本上就這種安裝新套件的方法, 不像, 嗯, Python 有好幾種不同的方式。

完成以後, 我們在終端機命令列中 (不是在 Julia 裡) 打入

	ipython notebook
	
這時自動會出現 IPython 的界面, 你在 New 中選 Julia, 就可以出現 Julia 的一個 notebook。

## IPython Notebook

到目前為止, 狀況很奇怪, 為什麼我們用 IPython Notebook 呢? 原來 IPython Notebook 除了可以用在 Python 上, 還支援許多其他程式語言。可以做很多程式語言的前端, 有點像一個編輯器, 可以用來寫許多不同程式語言一樣。

不過, 這樣叫 IPython Notebook 不是很怪? 嗯, 也就是這樣, IPython Notebook 在 3.0 後, 正式改名叫做

Jupyter!

Jupter 除了發音是「木星」, 名稱還受了三種開放式程式語言的啟發:

Julia, Python, R

(雖然 Jupyter 支援更多程式語言)

所以, 我們用 IPython Notebook, 不, Jupyter 界面, 是很有道理的。

## 這本書的風格

這本書不太像一般程式設計的書。你不會看到介紹資料型態, 然後就來介紹整數、浮點數、字串什麼什麼的。

我們每次都是從實際的 projects 做起。裡面用到什麼我們介紹什麼。有時一次次重覆介紹, 自然熟悉這些東西。

我想也許有一點點程式的經驗 (雖然不用太多, 顯然不需要用過 Julia) 閱讀本書會比較容易, 不過大致上初學者還是很適合的。


