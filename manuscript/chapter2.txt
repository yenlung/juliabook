# 畫圖、亂數、猜數字

## 加入一個套件

一個程式語言一開始就畫圖也是挺少見的。

雖然我是有點騙人, 因為畫圖還是要安裝套件。所以, 我們就在 Julia 中打入 (就說我們會用好多次):

	Pkg.add("PyPlot")
	
等等, 為什麼叫 PyPlot? 這自然是從 Python 來的, 基本上就是我們在 Python 中的著名套件 Matplotlib。

當然, 一個套件我們只要裝一次就好了, 下次就可以直接使用。

## 瞬間, 一張圖就完成了

要使用 PyPlot 這個套件, 我們要

	using PyPlot
	
如果用過 Python 你會覺得非常熟悉。沒有也沒關係, 因為使用非常簡單。例如我們下達

	plot([3, -2, 5, 1])

就畫出以下的圖!

![plot01](images/plot01.png)

這裡的意思是 Julia 會畫出 (0,3), (1,-2), (2,5), (3,1) 這些點, 然後用線段連起來。也就我們剛剛的 array 是標出點的 y 座標, Julia 自動補上 x 座標。

## 更炫的圖

我們再來一個例子。和 Python 的 numpy 套件一樣,  Julia 有很多產生 array 的方式。例如我們想要亂數取 100 個點, 但又想這些點是符合常態分配, 平均值是 0, 標準差是 1, 再畫出來, 我們可以這樣做。

	plot(randn(100))
	
結果是這樣。

![plot02](images/plot02.png)

等等, 我們有讀入什麼套件嗎? 沒有! Julia 居然把像 randn 這種指令放在內建! 這裡可以看出, Julia 是真的一心想要做全功能, 但自然就會數據分析這樣的程式語言。